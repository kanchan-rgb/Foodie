<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>FoodieExpress - Food Delivery App</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f8f9fa;
            color: #333;
            line-height: 1.6;
        }

        /* Color Scheme */
        :root {
            --primary-color: #ff6b35;
            --secondary-color: #ff8c42;
            --accent-color: #ffa726;
            --text-dark: #2c3e50;
            --text-light: #7f8c8d;
            --background-light: #ffffff;
            --background-gray: #f8f9fa;
            --border-color: #e9ecef;
            --success-color: #27ae60;
            --error-color: #e74c3c;
        }

        /* Container */
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        /* Header */
        .header {
            background: var(--background-light);
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            z-index: 1000;
        }

        .nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem 0;
        }

        .logo {
            font-size: 1.8rem;
            font-weight: bold;
            color: var(--primary-color);
        }

        .nav-links {
            display: flex;
            list-style: none;
            gap: 2rem;
        }

        .nav-links a {
            text-decoration: none;
            color: var(--text-dark);
            font-weight: 500;
            transition: color 0.3s ease;
        }

        .nav-links a:hover {
            color: var(--primary-color);
        }

        .user-actions {
            display: flex;
            gap: 1rem;
            align-items: center;
        }

        .btn {
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 25px;
            cursor: pointer;
            font-weight: 500;
            text-decoration: none;
            display: inline-block;
            text-align: center;
            transition: all 0.3s ease;
        }

        .btn-primary {
            background: var(--primary-color);
            color: white;
        }

        .btn-primary:hover {
            background: var(--secondary-color);
            transform: translateY(-2px);
        }

        .btn-outline {
            background: transparent;
            color: var(--primary-color);
            border: 2px solid var(--primary-color);
        }

        .btn-outline:hover {
            background: var(--primary-color);
            color: white;
        }

        /* Cart Icon */
        .cart-icon {
            position: relative;
            cursor: pointer;
        }

        .cart-count {
            position: absolute;
            top: -8px;
            right: -8px;
            background: var(--primary-color);
            color: white;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            font-size: 0.8rem;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        /* Page Sections */
        .page {
            display: none;
            padding-top: 100px;
            min-height: 100vh;
        }

        .page.active {
            display: block;
        }

        /* Login/Signup Page */
        .auth-container {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: calc(100vh - 100px);
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        }

        .auth-card {
            background: var(--background-light);
            padding: 3rem;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            width: 100%;
            max-width: 400px;
        }

        .auth-header {
            text-align: center;
            margin-bottom: 2rem;
        }

        .auth-header h2 {
            color: var(--text-dark);
            margin-bottom: 0.5rem;
        }

        .auth-header p {
            color: var(--text-light);
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            color: var(--text-dark);
            font-weight: 500;
        }

        .form-control {
            width: 100%;
            padding: 1rem;
            border: 2px solid var(--border-color);
            border-radius: 10px;
            font-size: 1rem;
            transition: border-color 0.3s ease;
        }

        .form-control:focus {
            outline: none;
            border-color: var(--primary-color);
        }

        .auth-switch {
            text-align: center;
            margin-top: 1.5rem;
        }

        .auth-switch a {
            color: var(--primary-color);
            text-decoration: none;
            font-weight: 500;
        }

        /* Home Page */
        .hero {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            padding: 4rem 0;
            text-align: center;
        }

        .hero h1 {
            font-size: 3rem;
            margin-bottom: 1rem;
        }

        .hero p {
            font-size: 1.2rem;
            margin-bottom: 2rem;
            opacity: 0.9;
        }

        .search-bar {
            max-width: 600px;
            margin: 0 auto;
            position: relative;
        }

        .search-input {
            width: 100%;
            padding: 1rem 1.5rem;
            border: none;
            border-radius: 50px;
            font-size: 1rem;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }

        .search-btn {
            position: absolute;
            right: 5px;
            top: 50%;
            transform: translateY(-50%);
            background: var(--primary-color);
            border: none;
            padding: 0.8rem 1.5rem;
            border-radius: 50px;
            color: white;
            cursor: pointer;
        }

        /* Categories */
        .categories {
            padding: 4rem 0;
        }

        .section-title {
            text-align: center;
            font-size: 2.5rem;
            margin-bottom: 3rem;
            color: var(--text-dark);
        }

        .category-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 2rem;
        }

        .category-card {
            background: var(--background-light);
            padding: 2rem;
            border-radius: 15px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .category-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 30px rgba(0,0,0,0.15);
        }

        .category-icon {
            font-size: 3rem;
            margin-bottom: 1rem;
        }

        .category-card h3 {
            color: var(--text-dark);
            margin-bottom: 0.5rem;
        }

        /* Restaurants */
        .restaurants {
            padding: 4rem 0;
            background: var(--background-gray);
        }

        .restaurant-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 2rem;
        }

        .restaurant-card {
            background: var(--background-light);
            border-radius: 15px;
            overflow: hidden;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .restaurant-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 30px rgba(0,0,0,0.15);
        }

        .restaurant-image {
            width: 100%;
            height: 200px;
            background: linear-gradient(45deg, var(--accent-color), var(--secondary-color));
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 4rem;
            color: white;
        }

        .restaurant-info {
            padding: 1.5rem;
        }

        .restaurant-name {
            font-size: 1.3rem;
            font-weight: bold;
            margin-bottom: 0.5rem;
            color: var(--text-dark);
        }

        .restaurant-meta {
            display: flex;
            justify-content: space-between;
            color: var(--text-light);
            font-size: 0.9rem;
        }

        .rating {
            color: var(--accent-color);
            font-weight: bold;
        }

        /* Menu Page */
        .menu-header {
            background: var(--background-light);
            padding: 2rem 0;
            border-bottom: 1px solid var(--border-color);
        }

        .menu-nav {
            display: flex;
            gap: 2rem;
            margin-top: 1rem;
        }

        .menu-nav-item {
            padding: 0.5rem 1rem;
            border: none;
            background: transparent;
            cursor: pointer;
            border-bottom: 2px solid transparent;
            transition: all 0.3s ease;
        }

        .menu-nav-item.active {
            border-bottom-color: var(--primary-color);
            color: var(--primary-color);
        }

        .menu-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 2rem;
            padding: 2rem 0;
        }

        .menu-item {
            background: var(--background-light);
            border-radius: 15px;
            overflow: hidden;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
        }

        .menu-item:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 25px rgba(0,0,0,0.15);
        }

        .menu-item-image {
            width: 100%;
            height: 150px;
            background: linear-gradient(45deg, var(--accent-color), var(--secondary-color));
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 3rem;
            color: white;
        }

        .menu-item-info {
            padding: 1.5rem;
        }

        .menu-item-name {
            font-size: 1.2rem;
            font-weight: bold;
            margin-bottom: 0.5rem;
            color: var(--text-dark);
        }

        .menu-item-description {
            color: var(--text-light);
            font-size: 0.9rem;
            margin-bottom: 1rem;
        }

        .menu-item-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .menu-item-price {
            font-size: 1.3rem;
            font-weight: bold;
            color: var(--primary-color);
        }

        .add-to-cart {
            background: var(--primary-color);
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .add-to-cart:hover {
            background: var(--secondary-color);
            transform: scale(1.05);
        }

        /* Cart Page */
        .cart-container {
            padding: 2rem 0;
        }

        .cart-item {
            background: var(--background-light);
            padding: 1.5rem;
            border-radius: 15px;
            margin-bottom: 1rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .cart-item-info h4 {
            color: var(--text-dark);
            margin-bottom: 0.5rem;
        }

        .cart-item-info p {
            color: var(--text-light);
            font-size: 0.9rem;
        }

        .quantity-controls {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .quantity-btn {
            background: var(--primary-color);
            color: white;
            border: none;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .cart-summary {
            background: var(--background-light);
            padding: 2rem;
            border-radius: 15px;
            margin-top: 2rem;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .summary-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 1rem;
        }

        .summary-total {
            font-size: 1.3rem;
            font-weight: bold;
            color: var(--text-dark);
            border-top: 2px solid var(--border-color);
            padding-top: 1rem;
        }

        /* Order Tracking */
        .tracking-container {
            padding: 2rem 0;
        }

        .order-status {
            background: var(--background-light);
            padding: 2rem;
            border-radius: 15px;
            text-align: center;
            margin-bottom: 2rem;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .status-icon {
            font-size: 4rem;
            color: var(--success-color);
            margin-bottom: 1rem;
        }

        .progress-bar {
            background: var(--border-color);
            height: 8px;
            border-radius: 4px;
            margin: 2rem 0;
            overflow: hidden;
        }

        .progress-fill {
            background: var(--success-color);
            height: 100%;
            width: 60%;
            border-radius: 4px;
            transition: width 0.3s ease;
        }

        /* Profile Page */
        .profile-container {
            padding: 2rem 0;
        }

        .profile-card {
            background: var(--background-light);
            padding: 2rem;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            margin-bottom: 2rem;
        }

        .profile-header {
            display: flex;
            align-items: center;
            gap: 2rem;
            margin-bottom: 2rem;
        }

        .profile-avatar {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            background: var(--primary-color);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 2rem;
            color: white;
        }

        .profile-info h2 {
            color: var(--text-dark);
            margin-bottom: 0.5rem;
        }

        .profile-info p {
            color: var(--text-light);
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .nav-links {
                display: none;
            }
            
            .hero h1 {
                font-size: 2rem;
            }
            
            .category-grid,
            .restaurant-grid,
            .menu-grid {
                grid-template-columns: 1fr;
            }
            
            .auth-card {
                margin: 1rem;
                padding: 2rem;
            }
        }

        /* Animations */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .fade-in {
            animation: fadeIn 0.6s ease-out;
        }

        /* Loading Spinner */
        .loading {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid rgba(255,255,255,.3);
            border-radius: 50%;
            border-top-color: #fff;
            animation: spin 1s ease-in-out infinite;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <!-- Header -->
    <header class="header">
        <div class="container">
            <nav class="nav">
                <div class="logo">🍔 FoodieExpress</div>
                <ul class="nav-links">
                    <li><a href="#" onclick="showPage('home')">Home</a></li>
                    <li><a href="#" onclick="showPage('restaurants')">Restaurants</a></li>
                    <li><a href="#" onclick="showPage('menu')">Menu</a></li>
                    <li><a href="#" onclick="showPage('orders')">Orders</a></li>
                </ul>
                <div class="user-actions">
                    <div class="cart-icon" onclick="showPage('cart')">
                        🛒
                        <span class="cart-count" id="cartCount">0</span>
                    </div>
                    <div id="authButtons">
                        <a href="#" class="btn btn-outline" onclick="showPage('login')">Login</a>
                        <a href="#" class="btn btn-primary" onclick="showPage('signup')">Sign Up</a>
                    </div>
                    <div id="userMenu" style="display: none;">
                        <a href="#" class="btn btn-outline" onclick="showPage('profile')">Profile</a>
                        <a href="#" class="btn btn-primary" onclick="logout()">Logout</a>
                    </div>
                </div>
            </nav>
        </div>
    </header>

    <!-- Login Page -->
    <div id="loginPage" class="page">
        <div class="auth-container">
            <div class="auth-card fade-in">
                <div class="auth-header">
                    <h2>Welcome Back!</h2>
                    <p>Sign in to your account</p>
                </div>
                <form id="loginForm">
                    <div class="form-group">
                        <label for="loginEmail">Email Address</label>
                        <input type="email" id="loginEmail" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label for="loginPassword">Password</label>
                        <input type="password" id="loginPassword" class="form-control" required>
                    </div>
                    <button type="submit" class="btn btn-primary" style="width: 100%;">
                        <span id="loginBtnText">Sign In</span>
                        <span id="loginSpinner" class="loading" style="display: none;"></span>
                    </button>
                </form>
                <div class="auth-switch">
                    <p>Don't have an account? <a href="#" onclick="showPage('signup')">Sign up here</a></p>
                </div>
            </div>
        </div>
    </div>

    <!-- Signup Page -->
    <div id="signupPage" class="page">
        <div class="auth-container">
            <div class="auth-card fade-in">
                <div class="auth-header">
                    <h2>Create Account</h2>
                    <p>Join FoodieExpress today</p>
                </div>
                <form id="signupForm">
                    <div class="form-group">
                        <label for="signupName">Full Name</label>
                        <input type="text" id="signupName" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label for="signupEmail">Email Address</label>
                        <input type="email" id="signupEmail" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label for="signupPhone">Phone Number</label>
                        <input type="tel" id="signupPhone" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label for="signupPassword">Password</label>
                        <input type="password" id="signupPassword" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label for="confirmPassword">Confirm Password</label>
                        <input type="password" id="confirmPassword" class="form-control" required>
                    </div>
                    <button type="submit" class="btn btn-primary" style="width: 100%;">
                        <span id="signupBtnText">Create Account</span>
                        <span id="signupSpinner" class="loading" style="display: none;"></span>
                    </button>
                </form>
                <div class="auth-switch">
                    <p>Already have an account? <a href="#" onclick="showPage('login')">Sign in here</a></p>
                </div>
            </div>
        </div>
    </div>

    <!-- Home Page -->
    <div id="homePage" class="page active">
        <section class="hero">
            <div class="container">
                <h1>Delicious Food, Delivered Fast</h1>
                <p>Order from your favorite restaurants and get it delivered in minutes</p>
                <div class="search-bar">
                    <input type="text" class="search-input" placeholder="Search for restaurants, cuisines, or dishes...">
                    <button class="search-btn">🔍</button>
                </div>
            </div>
        </section>

        <section class="categories">
            <div class="container">
                <h2 class="section-title">Popular Categories</h2>
                <div class="category-grid">
                    <div class="category-card" onclick="filterByCategory('pizza')">
                        <div class="category-icon">🍕</div>
                        <h3>Pizza</h3>
                        <p>Cheesy goodness</p>
                    </div>
                    <div class="category-card" onclick="filterByCategory('burger')">
                        <div class="category-icon">🍔</div>
                        <h3>Burgers</h3>
                        <p>Juicy & delicious</p>
                    </div>
                    <div class="category-card" onclick="filterByCategory('sushi')">
                        <div class="category-icon">🍣</div>
                        <h3>Sushi</h3>
                        <p>Fresh & authentic</p>
                    </div>
                    <div class="category-card" onclick="filterByCategory('indian')">
                        <div class="category-icon">🍛</div>
                        <h3>Indian</h3>
                        <p>Spicy & flavorful</p>
                    </div>
                    <div class="category-card" onclick="filterByCategory('dessert')">
                        <div class="category-icon">🍰</div>
                        <h3>Desserts</h3>
                        <p>Sweet treats</p>
                    </div>
                    <div class="category-card" onclick="filterByCategory('healthy')">
                        <div class="category-icon">🥗</div>
                        <h3>Healthy</h3>
                        <p>Fresh & nutritious</p>
                    </div>
                </div>
            </div>
        </section>

        <section class="restaurants">
            <div class="container">
                <h2 class="section-title">Featured Restaurants</h2>
                <div class="restaurant-grid" id="restaurantGrid">
                    <!-- Restaurants will be populated by JavaScript -->
                </div>
            </div>
        </section>
    </div>

    <!-- Restaurants Page -->
    <div id="restaurantsPage" class="page">
        <div class="container">
            <h2 class="section-title">All Restaurants</h2>
            <div class="restaurant-grid" id="allRestaurantGrid">
                <!-- All restaurants will be populated by JavaScript -->
            </div>
        </div>
    </div>

    <!-- Menu Page -->
    <div id="menuPage" class="page">
        <div class="menu-header">
            <div class="container">
                <h2 id="restaurantName">Restaurant Menu</h2>
                <div class="menu-nav">
                    <button class="menu-nav-item active" onclick="filterMenu('all')">All Items</button>
                    <button class="menu-nav-item" onclick="filterMenu('appetizers')">Appetizers</button>
                    <button class="menu-nav-item" onclick="filterMenu('mains')">Main Course</button>
                    <button class="menu-nav-item" onclick="filterMenu('desserts')">Desserts</button>
                    <button class="menu-nav-item" onclick="filterMenu('beverages')">Beverages</button>
                </div>
            </div>
        </div>
        <div class="container">
            <div class="menu-grid" id="menuGrid">
                <!-- Menu items will be populated by JavaScript -->
            </div>
        </div>
    </div>

    <!-- Cart Page -->
    <div id="cartPage" class="page">
        <div class="container">
            <div class="cart-container">
                <h2 class="section-title">Your Cart</h2>
                <div id="cartItems">
                    <!-- Cart items will be populated by JavaScript -->
                </div>
                <div class="cart-summary" id="cartSummary" style="display: none;">
                    <div class="summary-row">
                        <span>Subtotal:</span>
                        <span id="subtotal">$0.00</span>
                    </div>
                    <div class="summary-row">
                        <span>Delivery Fee:</span>
                        <span id="deliveryFee">$2.99</span>
                    </div>
                    <div class="summary-row">
                        <span>Tax:</span>
                        <span id="tax">$0.00</span>
                    </div>
                    <div class="summary-row summary-total">
                        <span>Total:</span>
                        <span id="total">$0.00</span>
                    </div>
                    <button class="btn btn-primary" style="width: 100%; margin-top: 1rem;" onclick="checkout()">
                        Proceed to Checkout
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Orders Page -->
    <div id="ordersPage" class="page">
        <div class="container">
            <div class="tracking-container">
                <h2 class="section-title">Order Tracking</h2>
                <div class="order-status">
                    <div class="status-icon">🚚</div>
                    <h3>Your order is on the way!</h3>
                    <p>Estimated delivery: 25-30 minutes</p>
                    <div class="progress-bar">
                        <div class="progress-fill"></div>
                    </div>
                    <div style="display: flex; justify-content: space-between; font-size: 0.9rem; color: var(--text-light);">
                        <span>Order Confirmed</span>
                        <span>Preparing</span>
                        <span>Out for Delivery</span>
                        <span>Delivered</span>
                    </div>
                </div>
                
                <div class="profile-card">
                    <h3>Order History</h3>
                    <div id="orderHistory">
                        <!-- Order history will be populated by JavaScript -->
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Profile Page -->
    <div id="profilePage" class="page">
        <div class="container">
            <div class="profile-container">
                <div class="profile-card">
                    <div class="profile-header">
                        <div class="profile-avatar" id="profileAvatar">👤</div>
                        <div class="profile-info">
                            <h2 id="profileName">John Doe</h2>
                            <p id="profileEmail">john.doe@example.com</p>
                        </div>
                    </div>
                    
                    <form id="profileForm">
                        <div class="form-group">
                            <label for="profileNameInput">Full Name</label>
                            <input type="text" id="profileNameInput" class="form-control">
                        </div>
                        <div class="form-group">
                            <label for="profileEmailInput">Email Address</label>
                            <input type="email" id="profileEmailInput" class="form-control">
                        </div>
                        <div class="form-group">
                            <label for="profilePhoneInput">Phone Number</label>
                            <input type="tel" id="profilePhoneInput" class="form-control">
                        </div>
                        <div class="form-group">
                            <label for="profileAddressInput">Delivery Address</label>
                            <textarea id="profileAddressInput" class="form-control" rows="3"></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary">Update Profile</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Application State
        let currentUser = null;
        let cart = [];
        let currentRestaurant = null;
        let orderHistory = [];

        // Sample Data
        const restaurants = [
            {
                id: 1,
                name: "Mario's Pizza Palace",
                cuisine: "Italian",
                rating: 4.5,
                deliveryTime: "25-35 min",
                deliveryFee: 2.99,
                image: "🍕",
                category: "pizza"
            },
            {
                id: 2,
                name: "Burger Junction",
                cuisine: "American",
                rating: 4.3,
                deliveryTime: "20-30 min",
                deliveryFee: 1.99,
                image: "🍔",
                category: "burger"
            },
            {
                id: 3,
                name: "Sakura Sushi",
                cuisine: "Japanese",
                rating: 4.7,
                deliveryTime: "30-40 min",
                deliveryFee: 3.99,
                image: "🍣",
                category: "sushi"
            },
            {
                id: 4,
                name: "Spice Garden",
                cuisine: "Indian",
                rating: 4.4,
                deliveryTime: "25-35 min",
                deliveryFee: 2.49,
                image: "🍛",
                category: "indian"
            },
            {
                id: 5,
                name: "Green Bowl",
                cuisine: "Healthy",
                rating: 4.6,
                deliveryTime: "15-25 min",
                deliveryFee: 1.99,
                image: "🥗",
                category: "healthy"
            },
            {
                id: 6,
                name: "Sweet Dreams Bakery",
                cuisine: "Desserts",
                rating: 4.8,
                deliveryTime: "20-30 min",
                deliveryFee: 2.99,
                image: "🍰",
                category: "dessert"
            }
        ];

        const menuItems = {
            1: [ // Mario's Pizza Palace
                { id: 101, name: "Margherita Pizza", description: "Fresh tomatoes, mozzarella, basil", price: 14.99, category: "mains", image: "🍕" },
                { id: 102, name: "Pepperoni Pizza", description: "Classic pepperoni with cheese", price: 16.99, category: "mains", image: "🍕" },
                { id: 103, name: "Garlic Bread", description: "Crispy bread with garlic butter", price: 6.99, category: "appetizers", image: "🥖" },
                { id: 104, name: "Tiramisu", description: "Classic Italian dessert", price: 7.99, category: "desserts", image: "🍰" },
                { id: 105, name: "Italian Soda", description: "Refreshing flavored soda", price: 3.99, category: "beverages", image: "🥤" }
            ],
            2: [ // Burger Junction
                { id: 201, name: "Classic Burger", description: "Beef patty, lettuce, tomato, onion", price: 12.99, category: "mains", image: "🍔" },
                { id: 202, name: "Cheese Burger", description: "Classic burger with cheese", price: 13.99, category: "mains", image: "🍔" },
                { id: 203, name: "Chicken Wings", description: "Spicy buffalo wings", price: 9.99, category: "appetizers", image: "🍗" },
                { id: 204, name: "Milkshake", description: "Creamy vanilla milkshake", price: 5.99, category: "beverages", image: "🥤" },
                { id: 205, name: "Apple Pie", description: "Homemade apple pie", price: 6.99, category: "desserts", image: "🥧" }
            ],
            3: [ // Sakura Sushi
                { id: 301, name: "Salmon Roll", description: "Fresh salmon with avocado", price: 18.99, category: "mains", image: "🍣" },
                { id: 302, name: "California Roll", description: "Crab, avocado, cucumber", price: 15.99, category: "mains", image: "🍣" },
                { id: 303, name: "Miso Soup", description: "Traditional Japanese soup", price: 4.99, category: "appetizers", image: "🍲" },
                { id: 304, name: "Green Tea Ice Cream", description: "Creamy matcha ice cream", price: 6.99, category: "desserts", image: "🍨" },
                { id: 305, name: "Sake", description: "Premium Japanese rice wine", price: 8.99, category: "beverages", image: "🍶" }
            ]
        };

        // Utility Functions
        function showPage(pageId) {
            // Hide all pages
            document.querySelectorAll('.page').forEach(page => {
                page.classList.remove('active');
            });
            
            // Show selected page
            document.getElementById(pageId + 'Page').classList.add('active');
            
            // Load page-specific content
            if (pageId === 'home') {
                loadFeaturedRestaurants();
            } else if (pageId === 'restaurants') {
                loadAllRestaurants();
            } else if (pageId === 'cart') {
                loadCart();
            } else if (pageId === 'orders') {
                loadOrderHistory();
            } else if (pageId === 'profile' && currentUser) {
                loadProfile();
            }
        }

        function showNotification(message, type = 'success') {
            const notification = document.createElement('div');
            notification.style.cssText = `
                position: fixed;
                top: 100px;
                right: 20px;
                background: ${type === 'success' ? 'var(--success-color)' : 'var(--error-color)'};
                color: white;
                padding: 1rem 2rem;
                border-radius: 10px;
                box-shadow: 0 5px 15px rgba(0,0,0,0.2);
                z-index: 10000;
                animation: slideIn 0.3s ease-out;
            `;
            notification.textContent = message;
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.remove();
            }, 3000);
        }

        // Authentication Functions
        document.getElementById('loginForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const email = document.getElementById('loginEmail').value;
            const password = document.getElementById('loginPassword').value;
            
            // Show loading
            document.getElementById('loginBtnText').style.display = 'none';
            document.getElementById('loginSpinner').style.display = 'inline-block';
            
            // Simulate API call
            setTimeout(() => {
                if (email && password) {
                    currentUser = {
                        name: email.split('@')[0],
                        email: email,
                        phone: '+1234567890',
                        address: '123 Main St, City, State'
                    };
                    
                    // Update UI
                    document.getElementById('authButtons').style.display = 'none';
                    document.getElementById('userMenu').style.display = 'flex';
                    
                    showNotification('Login successful!');
                    showPage('home');
                } else {
                    showNotification('Invalid credentials', 'error');
                }
                
                // Hide loading
                document.getElementById('loginBtnText').style.display = 'inline';
                document.getElementById('loginSpinner').style.display = 'none';
            }, 1000);
        });

        document.getElementById('signupForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const name = document.getElementById('signupName').value;
            const email = document.getElementById('signupEmail').value;
            const phone = document.getElementById('signupPhone').value;
            const password = document.getElementById('signupPassword').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            
            if (password !== confirmPassword) {
                showNotification('Passwords do not match', 'error');
                return;
            }
            
            // Show loading
            document.getElementById('signupBtnText').style.display = 'none';
            document.getElementById('signupSpinner').style.display = 'inline-block';
            
            // Simulate API call
            setTimeout(() => {
                currentUser = {
                    name: name,
                    email: email,
                    phone: phone,
                    address: ''
                };
                
                // Update UI
                document.getElementById('authButtons').style.display = 'none';
                document.getElementById('userMenu').style.display = 'flex';
                
                showNotification('Account created successfully!');
                showPage('home');
                
                // Hide loading
                document.getElementById('signupBtnText').style.display = 'inline';
                document.getElementById('signupSpinner').style.display = 'none';
            }, 1000);
        });

        function logout() {
            currentUser = null;
            cart = [];
            updateCartCount();
            
            // Update UI
            document.getElementById('authButtons').style.display = 'flex';
            document.getElementById('userMenu').style.display = 'none';
            
            showNotification('Logged out successfully');
            showPage('home');
        }

        // Restaurant Functions
        function loadFeaturedRestaurants() {
            const grid = document.getElementById('restaurantGrid');
            grid.innerHTML = '';
            
            restaurants.slice(0, 6).forEach(restaurant => {
                const card = createRestaurantCard(restaurant);
                grid.appendChild(card);
            });
        }

        function loadAllRestaurants() {
            const grid = document.getElementById('allRestaurantGrid');
            grid.innerHTML = '';
            
            restaurants.forEach(restaurant => {
                const card = createRestaurantCard(restaurant);
                grid.appendChild(card);
            });
        }

        function createRestaurantCard(restaurant) {
            const card = document.createElement('div');
            card.className = 'restaurant-card';
            card.onclick = () => openRestaurant(restaurant);
            
            card.innerHTML = `
                <div class="restaurant-image">${restaurant.image}</div>
                <div class="restaurant-info">
                    <div class="restaurant-name">${restaurant.name}</div>
                    <div class="restaurant-meta">
                        <span class="rating">⭐ ${restaurant.rating}</span>
                        <span>${restaurant.deliveryTime}</span>
                        <span>$${restaurant.deliveryFee} delivery</span>
                    </div>
                </div>
            `;
            
            return card;
        }

        function openRestaurant(restaurant) {
            currentRestaurant = restaurant;
            document.getElementById('restaurantName').textContent = restaurant.name;
            loadMenu(restaurant.id);
            showPage('menu');
        }

        function filterByCategory(category) {
            const filteredRestaurants = restaurants.filter(r => r.category === category);
            const grid = document.getElementById('restaurantGrid');
            grid.innerHTML = '';
            
            filteredRestaurants.forEach(restaurant => {
                const card = createRestaurantCard(restaurant);
                grid.appendChild(card);
            });
            
            showNotification(`Showing ${category} restaurants`);
        }

        // Menu Functions
        function loadMenu(restaurantId) {
            const grid = document.getElementById('menuGrid');
            grid.innerHTML = '';
            
            const items = menuItems[restaurantId] || [];
            items.forEach(item => {
                const card = createMenuItemCard(item);
                grid.appendChild(card);
            });
        }

        function createMenuItemCard(item) {
            const card = document.createElement('div');
            card.className = 'menu-item';
            
            card.innerHTML = `
                <div class="menu-item-image">${item.image}</div>
                <div class="menu-item-info">
                    <div class="menu-item-name">${item.name}</div>
                    <div class="menu-item-description">${item.description}</div>
                    <div class="menu-item-footer">
                        <div class="menu-item-price">$${item.price}</div>
                        <button class="add-to-cart" onclick="addToCart(${JSON.stringify(item).replace(/"/g, '&quot;')})">
                            Add to Cart
                        </button>
                    </div>
                </div>
            `;
            
            return card;
        }

        function filterMenu(category) {
            // Update active nav item
            document.querySelectorAll('.menu-nav-item').forEach(item => {
                item.classList.remove('active');
            });
            event.target.classList.add('active');
            
            const grid = document.getElementById('menuGrid');
            const items = menuItems[currentRestaurant.id] || [];
            
            grid.innerHTML = '';
            
            const filteredItems = category === 'all' ? items : items.filter(item => item.category === category);
            filteredItems.forEach(item => {
                const card = createMenuItemCard(item);
                grid.appendChild(card);
            });
        }

        // Cart Functions
        function addToCart(item) {
            if (!currentUser) {
                showNotification('Please login to add items to cart', 'error');
                showPage('login');
                return;
            }
            
            const existingItem = cart.find(cartItem => cartItem.id === item.id);
            
            if (existingItem) {
                existingItem.quantity += 1;
            } else {
                cart.push({ ...item, quantity: 1, restaurantId: currentRestaurant.id });
            }
            
            updateCartCount();
            showNotification(`${item.name} added to cart!`);
        }

        function updateCartCount() {
            const count = cart.reduce((total, item) => total + item.quantity, 0);
            document.getElementById('cartCount').textContent = count;
        }

        function loadCart() {
            const container = document.getElementById('cartItems');
            const summary = document.getElementById('cartSummary');
            
            if (cart.length === 0) {
                container.innerHTML = '<div style="text-align: center; padding: 3rem;"><h3>Your cart is empty</h3><p>Add some delicious items to get started!</p></div>';
                summary.style.display = 'none';
                return;
            }
            
            container.innerHTML = '';
            let subtotal = 0;
            
            cart.forEach(item => {
                const cartItem = document.createElement('div');
                cartItem.className = 'cart-item';
                
                const itemTotal = item.price * item.quantity;
                subtotal += itemTotal;
                
                cartItem.innerHTML = `
                    <div class="cart-item-info">
                        <h4>${item.name}</h4>
                        <p>$${item.price} each</p>
                    </div>
                    <div class="quantity-controls">
                        <button class="quantity-btn" onclick="updateQuantity(${item.id}, -1)">-</button>
                        <span>${item.quantity}</span>
                        <button class="quantity-btn" onclick="updateQuantity(${item.id}, 1)">+</button>
                    </div>
                    <div class="cart-item-price">$${itemTotal.toFixed(2)}</div>
                `;
                
                container.appendChild(cartItem);
            });
            
            // Update summary
            const deliveryFee = 2.99;
            const tax = subtotal * 0.08;
            const total = subtotal + deliveryFee + tax;
            
            document.getElementById('subtotal').textContent = `$${subtotal.toFixed(2)}`;
            document.getElementById('tax').textContent = `$${tax.toFixed(2)}`;
            document.getElementById('total').textContent = `$${total.toFixed(2)}`;
            
            summary.style.display = 'block';
        }

        function updateQuantity(itemId, change) {
            const item = cart.find(cartItem => cartItem.id === itemId);
            
            if (item) {
                item.quantity += change;
                
                if (item.quantity <= 0) {
                    cart = cart.filter(cartItem => cartItem.id !== itemId);
                }
                
                updateCartCount();
                loadCart();
            }
        }

        function checkout() {
            if (!currentUser) {
                showNotification('Please login to checkout', 'error');
                showPage('login');
                return;
            }
            
            if (cart.length === 0) {
                showNotification('Your cart is empty', 'error');
                return;
            }
            
            // Create order
            const order = {
                id: Date.now(),
                items: [...cart],
                total: parseFloat(document.getElementById('total').textContent.replace('$', '')),
                status: 'confirmed',
                timestamp: new Date(),
                restaurant: currentRestaurant.name
            };
            
            orderHistory.unshift(order);
            cart = [];
            updateCartCount();
            
            showNotification('Order placed successfully!');
            showPage('orders');
        }

        // Order Functions
        function loadOrderHistory() {
            const container = document.getElementById('orderHistory');
            
            if (orderHistory.length === 0) {
                container.innerHTML = '<p>No orders yet. Place your first order!</p>';
                return;
            }
            
            container.innerHTML = '';
            
            orderHistory.forEach(order => {
                const orderCard = document.createElement('div');
                orderCard.className = 'cart-item';
                orderCard.style.marginBottom = '1rem';
                
                orderCard.innerHTML = `
                    <div class="cart-item-info">
                        <h4>Order #${order.id}</h4>
                        <p>${order.restaurant} • ${order.items.length} items</p>
                        <p style="font-size: 0.8rem; color: var(--text-light);">${order.timestamp.toLocaleDateString()}</p>
                    </div>
                    <div>
                        <div style="text-align: right;">
                            <div style="font-weight: bold;">$${order.total.toFixed(2)}</div>
                            <div style="font-size: 0.9rem; color: var(--success-color);">${order.status}</div>
                        </div>
                    </div>
                `;
                
                container.appendChild(orderCard);
            });
        }

        // Profile Functions
        function loadProfile() {
            if (!currentUser) return;
            
            document.getElementById('profileName').textContent = currentUser.name;
            document.getElementById('profileEmail').textContent = currentUser.email;
            document.getElementById('profileAvatar').textContent = currentUser.name.charAt(0).toUpperCase();
            
            document.getElementById('profileNameInput').value = currentUser.name;
            document.getElementById('profileEmailInput').value = currentUser.email;
            document.getElementById('profilePhoneInput').value = currentUser.phone;
            document.getElementById('profileAddressInput').value = currentUser.address;
        }

        document.getElementById('profileForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            currentUser.name = document.getElementById('profileNameInput').value;
            currentUser.email = document.getElementById('profileEmailInput').value;
            currentUser.phone = document.getElementById('profilePhoneInput').value;
            currentUser.address = document.getElementById('profileAddressInput').value;
            
            loadProfile();
            showNotification('Profile updated successfully!');
        });

        // Search Function
        document.querySelector('.search-input').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                const query = this.value.toLowerCase();
                const filteredRestaurants = restaurants.filter(r => 
                    r.name.toLowerCase().includes(query) || 
                    r.cuisine.toLowerCase().includes(query)
                );
                
                const grid = document.getElementById('restaurantGrid');
                grid.innerHTML = '';
                
                if (filteredRestaurants.length === 0) {
                    grid.innerHTML = '<div style="text-align: center; padding: 3rem;"><h3>No restaurants found</h3><p>Try searching for something else</p></div>';
                } else {
                    filteredRestaurants.forEach(restaurant => {
                        const card = createRestaurantCard(restaurant);
                        grid.appendChild(card);
                    });
                }
                
                showNotification(`Found ${filteredRestaurants.length} restaurants`);
            }
        });

        // Initialize App
        document.addEventListener('DOMContentLoaded', function() {
            loadFeaturedRestaurants();
            updateCartCount();
        });

        // Add CSS animation for slide in notification
        const style = document.createElement('style');
        style.textContent = `
            @keyframes slideIn {
                from {
                    transform: translateX(100%);
                    opacity: 0;
                }
                to {
                    transform: translateX(0);
                    opacity: 1;
                }
            }
        `;
        document.head.appendChild(style);
    </script>
</body>
</html>
